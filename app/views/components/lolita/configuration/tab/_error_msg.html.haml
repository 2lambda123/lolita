- if resource.errors.any? 
  %p.errorExplanation{:id => "errorExplanation"}
    - errors = resource.errors.keys.collect do |k|
      - title = if k.to_s.match(/\./)
        - assoc_name, attr_name = k.to_s.split(".")
        - if tab.fields.by_name(attr_name.to_sym)
          - klass = resource.lolita.dbi.reflect_on_association(assoc_name.to_sym).klass
          - klass.human_attribute_name(attr_name).downcase
      - else
        - if tab.fields.by_name(k.to_sym)
          - resource.class.human_attribute_name(k)
      - if title && resource.errors[k] && resource.errors[k].respond_to?(:any?) && resource.errors[k].any?
        - "#{title.to_s.capitalize}: #{resource.errors[k].join(" #{::I18n.t("lolita.shared.and")} ")}"
    = raw(errors.compact.join("<br>"))
