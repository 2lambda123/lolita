<% cfg=public_google_map_configuration(public_container) %>
<div id="<%=cfg[:map_prefix]%>_<%=cfg[:unique_id]%>" class="google-map <%=cfg[:class_name]%>" style="width:<%=cfg[:width] || '600px'%>;height:<%=cfg[:height] || '400px'%>;"></div>
<%
# Allowed configuration
# :unique_id - unique Integer or String value
# :class_name - optional, map container html class name, if with google-map is not enough
# :width - map container with in px, default 600
# :height - map container height in px, default 400
# :object - ActiveRecord object that refrers to locations
# :lat - Array with latitudes, if object passed then that will be overwiritten
# :lng - same as :lat only for longitudes.
# :include_js - add or note the google_maps JS inline, when this is false you
#               should call "include_google_map_js" helper method in your page HEAD
%>
<% if Lolita.config.google :key %>
  <% if cfg[:include_js] %>
    <%=  include_google_map_js %>
  <% end %>
  <script type="text/javascript">
    if(typeof(PublicGMap)=="undefined") PublicGMap={}
    loadjscssfile("/lolita/javascripts/cms/media/google_map.js","js")
    function init_lolita_google_map_<%=cfg[:unique_id]%>(){
      try{
        <%="PublicGMap.public_map_#{cfg[:unique_id]}"%>=new LolitaGoogleMap(<%= cfg.to_json %>)
        <%="PublicGMap.public_map_#{cfg[:unique_id]}.init()" %>
      }catch(e){
        setTimeout("init_lolita_google_map_<%=cfg[:unique_id]%>()",500)
      }
    }
    init_lolita_google_map_<%=cfg[:unique_id]%>()
  </script>
<%end%>